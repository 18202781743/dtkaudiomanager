/*!
@~chinese
@file daudiostream.h

daudiostream.h 中定义了音频端口管理对象的接口。

@class Dtk::AudioManager::DAudioStream daudiostream.h
@brief DAudioStream音频流管理类

DAudioStream 中定义了音频流对象的接口。

@fn DAudioStream::DAudioStream(DPlatformAudioStream *d, DAudioDevice *parent = nullptr)
@brief 构造获取音频流
@param [in] d 为具体的音频流实现类
@param [in] parent 为对应的音频设备类

@fn virtual bool DAudioStream::mute() const
@brief 是否静音
@return 是否静音

@fn virtual double DAudioStream::fade() const
@brief 前后声道平衡值
@return 前后声道平衡值

@fn virtual double DAudioStream::volume() const
@brief 当前音量
@return 当前音量

@fn virtual double DAudioStream::balance() const
@brief 左右声道平衡值
@return 左右声道平衡值

@fn virtual bool DAudioStream::supportBalance() const
@brief 是否支持左右声道调整
@return 是否支持左右声道调整

@fn virtual bool DAudioStream::supportFade() const
@brief 是否支持前后声道调整
@return 是否支持前后声道调整

@fn virtual QString DAudioStream::name() const
@brief 流名称
@return 流名称

@fn quint32 DAudioStream::card() const
@brief 流对应的声卡
@return 流对应的声卡

@fn QString DAudioStream::isPlay() const
@brief 调节音量或声道时，是否反馈调节效果
@return 是否反馈

@fn void DAudioStream::setIsPlay(bool isPlay) const
@brief 设置是否反馈调节效果
@param [in] isPlay 是否反馈

@fn virtual void DAudioStream::setMute(bool mute)
@brief 设置是否静音
@param [in] mute 是否静音

@fn virtual void DAudioStream::setFade(double fade)
@brief 设置前后声道平衡值
@param [in] fade 前后声道平衡值

@fn virtual void DAudioStream::setVolume(double volume)
@brief 设置当前音量
@param [in] volume 音量值

@fn virtual void DAudioStream::setBalance(double balance)
@brief 设置左右声道平衡值
@param [in] balance 左右声道平衡值

@fn void DAudioStream::muteChanged(bool mute)
@brief 静音变化
@param [in] mute 是否静音 

@fn void DAudioStream::fadeChanged(double fade)
@brief 前后声道平衡值变化
@param [in] fade 前后声道平衡值

@fn void DAudioStream::volumeChanged(double volume)
@brief 当前音量变化
@param [in] volume 当前音量值

@fn void DAudioStream::balanceChanged(double balance)
@brief 左右声道平衡值变化
@param [in] balance 左右声道平衡值

@fn void DAudioStream::supportBalanceChanged(bool supportBalance)
@brief 是否支持左右声道调整变化
@param [in] supportBalance 是否支持左右声道调整

@fn void DAudioStream::supportFadeChanged(bool supportFade)
@brief 是否支持前后声道调整变化
@param [in] supportFade 是否支持前后声道调整

@fn void DAudioDevice::isPlayChanged(bool isPlay)
@brief 是否反馈设置变化
@param [in] isPlay 是否反馈


@class Dtk::AudioManager::DAudioInputStream daudiostream.h
@brief DAudioInputStream音频输入流类

DAudioInputStream 中定义了音频输入流对象的接口。

@fn DAudioInputStream::DAudioInputStream(DPlatformAudioInputStream *d, DAudioDevice *parent = nullptr)
@brief 构造音频输入流类
@param [in] d 音频输入流具体实现类
@param [in] parent 对应的音频设备

@class Dtk::AudioManager::DAudioOutputStream daudiostream.h
@brief DAudioOutputStream音频输出流类

DAudioOutputStream 中定义了音频输出流对象的接口。

@fn DAudioOutputStream::DAudioOutputStream(DPlatformAudioOutputStream *d, DAudioDevice *parent = nullptr)
@brief 构造音频输出流类
@param [in] d 音频输出流具体实现类
@param [in] parent 对应的音频设备

*/
